<style lang="less">
  page{
    height: 100%;
    background-color: #f9fbff;
  }
  @font-face {
    font-family: 'iconfont';  /* project id 979766 */
    src: url('//at.alicdn.com/t/font_979766_139vyjvfeb2b.eot');
    src: url('//at.alicdn.com/t/font_979766_139vyjvfeb2b.eot?#iefix') format('embedded-opentype'),
    url('//at.alicdn.com/t/font_979766_139vyjvfeb2b.woff') format('woff'),
    url('//at.alicdn.com/t/font_979766_139vyjvfeb2b.ttf') format('truetype'),
    url('//at.alicdn.com/t/font_979766_139vyjvfeb2b.svg#iconfont') format('svg');
  }
  .iconfont {
    font-family:"iconfont" !important;
    font-size:16px;
    font-style:normal;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
  }

  .icon-email:before { content: "\e622"; }
  .icon-setting:before { content: "\e608"; }
  .icon-star:before { content: "\e6a9"; }
  .icon-chat:before { content: "\e68a"; }
</style>

<script>
import wepy from 'wepy'
import 'wepy-async-function'

export default class extends wepy.app {
  config = {
    pages: [
      'pages/plan',
      'pages/me'
      // 子页面
    ],
    window: {
      backgroundTextStyle: 'light',
      navigationBarBackgroundColor: '#138cff',
      navigationBarTitleText: 'WeChat',
      navigationBarTextStyle: 'white',
      backgroundColor: '#138cff'
    },
    tabBar: {
      color: '#757982',
      selectedColor: '#138cff',
      borderStyle: 'white',
      backgroundColor: '#fff',
      list: [
        {
          pagePath: 'pages/plan',
          text: '计划',
          iconPath: 'images/tabbar/plan.png',
          selectedIconPath: 'images/tabbar/plan-on.png'
        },
        {
          pagePath: 'pages/me',
          text: '我的',
          iconPath: 'images/tabbar/me.png',
          selectedIconPath: 'images/tabbar/me-on.png'
        }
      ]
    }
  }

  globalData = {
    userInfo: null
  }

  constructor () {
    super()
    this.use('requestfix')
  }

  onLaunch() {
    this.testAsync()
  }

  sleep (s) {
    return new Promise((resolve, reject) => {
      setTimeout(() => {
        resolve('promise resolved')
      }, s * 1000)
    })
  }

  async testAsync () {
    const data = await this.sleep(3)
    console.log(data)
  }

  getUserInfo(cb) {
    const that = this
    if (this.globalData.userInfo) {
      return this.globalData.userInfo
    }
    wepy.getUserInfo({
      success (res) {
        that.globalData.userInfo = res.userInfo
        cb && cb(res.userInfo)
      }
    })
  }
}
</script>
